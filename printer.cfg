# AKSPrint Cube 3D Printer By Amit Kumar - KLIPPER/Octopus main board
# BLV mgn Cube 3D Printer By Ben Levi - KLIPPER
# This file contains common pin mappings for Octopus boards.
# To use this config, the firmware should be compiled.

# This Config file was adapted for BLV mgn Cube 3D printer By Ben Levi - https://www.blvprojects.com
# 	BLV mgn Cube 3D printer -  Locally sourced
# 	Dual z true leveling (triple z soon..) Z1 connected to Z and Z2 to E1
#   Pinda probe
# 	Dragon Hotend/Extruder
# 	Dual 4020 blowers 

#   AKSPrint Config
#   MainBoard : BKT Octopus board
#   Stepper Drv: TMC2209
#   No of Stepper: 5+1 (Dual Z)
#   Stepper Details : X: , Y: , Z-Z1:, Z2: , E0 : 
#   End Stop : X: Y: 
#   Display Board: 
#   Hotend : Dragon ST , Heater: , TMRT: 
#   Extruder: Clone bondtect, bowden drive. 
#   Hotend Fans: Fan1:, Fan2:, Fan3:, 
#   NeoPixel: 16 led
#   Raspberry pi: 3A+
#   Frame : 20202




# See docs/Config_Reference.md for a description of parameters.
# For more info please check this link: https://www.klipper3d.org
#https://3dwork.io/en/btt-octopus/
#https://www.ifixit.com/Guide/Klipper+Mainsail+Install/146933

# klipper Config start:

[stepper_x]                     # Define X stepper
step_pin: PD6                   # Step GPIO pin (triggered high).
dir_pin: PD11                   # Direction GPIO pin (high indicates positive direction).
enable_pin: !PC6                # Enable pin (default is enable high; use ! to indicate enable low).
microsteps: 16                  # The number of microsteps the stepper motor driver uses. 
rotation_distance: 32           # For 16T gear X 2mm pitch GT2 belt.
endstop_pin: ^PC14              # Endstop switch detection pin.
position_endstop: -8            # Location of the endstop (mm)-9.
position_max: 317               # Maximum valid distance (mm) the user may command.
position_min: -10               # Minimum valid distance (mm) the user may command.
homing_speed: 120               # Maximum velocity (in mm/s) of the stepper when homing.
homing_retract_dist: 5          # Distance to backoff (in mm) before homing a second time during homing. Set this to zero to disable the second home.
full_steps_per_rotation: 400    # The number of full steps for one rotation of the stepper motor. 200 for 1.8 motor or 400 for 0.9 motor.
homing_positive_dir: false      # If true, homing will cause the stepper to move in a positive direction (away from zero); if false, home towards zero.

#mode 2
#position_endstop: -25            # Location of the endstop (mm)-9.
#position_max: 320               # Maximum valid distance (mm) the user may command.
#position_min: -25               # Minimum valid distance (mm) the user may command.

#mode 3
#step_pin: PE9
#dir_pin: !PF1
#enable_pin: !PF2
#step_distance: .0050
#endstop_pin: PB10
#position_endstop: -13
#position_min: -13
#position_max: 320
#homing_speed: 50

[tmc2209 stepper_x]       # Define X Driver
cs_pin: PD14              # Step GPIO pin (triggered high)
spi_bus: usart1           # SPI settings
run_current: 1.750        # The amount of current (in amps RMS) to configure the driver to use during stepper movement. NOTE: my defualt was 1.650 but changed for High speed mode.
sense_resistor: 0.051     # The resistance (in ohms) of the motor sense resistor
interpolate: true         # If true, enable step interpolation (the driver will internally step at a rate of 256 micro-steps).

[stepper_y]     # Define Y stepper (check X description).
step_pin: PD7
dir_pin: PD12
enable_pin: !PC6
microsteps: 16
rotation_distance: 32
endstop_pin: ^PA2
position_endstop: 307
position_min: -21
position_max: 370
homing_speed: 120
homing_positive_dir: true
homing_retract_dist: 5
full_steps_per_rotation: 400

#mode 2
#dir_pin: !PD12
#position_endstop: 317
#position_min: -5
#position_max: 317

#mode 3
[stepper_y]
#step_pin: PE11
#dir_pin: !PE8
#enable_pin: !PD7
#step_distance: .0050
#endstop_pin: PE12
#position_endstop: -13
#position_min: -13
#position_max: 320
#homing_speed: 50

[tmc2209 stepper_y]     # Define Y Driver (check X description).
cs_pin: PC9
spi_bus: usart1
run_current: 1.750
sense_resistor: 0.051
interpolate: true


[stepper_z]             # Define Z steppers (check X description).
step_pin: PD8
dir_pin: PD13
enable_pin: !PC6
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
#endstop_pin: ^PD29
#endstop_pin: PD10  # E0 endstop
#endstop_pin: PC16  # E1 endstop
#position_endstop: 0.5
position_min: -5.0
position_max: 320
homing_speed: 10.0
homing_retract_dist: 3.0
homing_retract_speed: 20
second_homing_speed: 2.0

[tmc2209 stepper_z]       # Define Z Driver (check X description).
cs_pin: PC10
spi_bus: usart1
run_current: 1.600
sense_resistor: 0.051
interpolate: true

[stepper_z1]            # Define Z1 (second) stepper (check X description).
step_pin: PD4
dir_pin: PD9
enable_pin: !PC6
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200

[tmc2209 stepper_z1]    # Define Z1 (second) driver (check X description).
cs_pin: PC25
spi_bus: usart1
run_current: 1.600
sense_resistor: 0.051
interpolate: true

#mode 3
#[stepper_z]
# step_pin: PE13
# dir_pin: !PC2
# enable_pin: !PC0
# step_distance: .0006275
#endstop_pin: PG8
# endstop_pin: probe:z_virtual_endstop
# position_endstop: 0.5
# position_min: -5
# position_max: 490

# [stepper_z1]
# step_pin: PD15 # this is E1
# dir_pin: !PE7
# enable_pin: !PA3
# step_distance: .0006275

# [stepper_z2]
# step_pin: PD13 # this is E2
# dir_pin: !PG9
# enable_pin: !PF0
# step_distance: .0006275

[extruder]                            # Define extruder
step_pin: PD5
dir_pin: PA1
enable_pin: !PC6
microsteps: 16
rotation_distance: 4.6095 #4.5477
nozzle_diameter: 0.400
filament_diameter: 1.750
full_steps_per_rotation: 200
heater_pin: !PA20
sensor_type: ATC Semitec 104GT-2      # Type of sensor (Thermistor) NF-sunrise provided Thermistor.
sensor_pin: PC15
smooth_time: 0.6                      # A time value (in seconds) over which temperature measurements will be smoothed to reduce the impact of measurement noise.
control = pid                         # Control algorithm (either pid or watermark)
pid_kp = 18.919
pid_ki = 0.612  
pid_kd = 146.152
min_temp: 0
max_temp: 260
min_extrude_temp: 180
max_extrude_only_distance: 200.0
max_extrude_only_velocity: 60
pressure_advance: 0.0405

#mode 2
#pid_kp = 26.729 
#pid_ki = 1.212 
#pid_kd = 147.344

#mode 3
# The TYPE_13 values are computed using the Marlin thermistor_13.h file
# using the formula R = Beta * A / (1024 - A), where Beta in this case is 4100 
# based on the information from the header file. Using "beta: 4100" didn't
# produce the same results as using the above formula and speciying
# temperature2/resistance2 & temperature3/resistance3 values.

# [thermistor TYPE_13]
# temperature1: 25
# resistance1: 100000
# temperature2: 190
# resistance2: 650
# temperature3: 240
# resistance3: 245

# [extruder]
# step_pin: PE14
# dir_pin: PA0 # BMG
# #dir_pin: !PA0 # bowden
# enable_pin: !PC3
# step_distance: .00235423 # BMG Clone = 1/XXX
# #step_distance: .00722543 # bowden 1/138.40
# #step_distance: .002
# nozzle_diameter: 0.400
# filament_diameter: 1.750
# max_extrude_only_accel: 60
# heater_pin: PB1 # Heat0
# #max_power: 0.5
# max_power: 0.75
# sensor_pin: PF3 # T0 Header
# #sensor_type: NTC 100K beta 3950
# sensor_type: TYPE_13
# control: pid
# pid_kp = 19.231
# pid_ki = 0.817
# pid_kd = 113.225
# min_extrude_temp: 140
# min_temp: 0
# max_temp: 285 # for everyday use
# #max_temp: 310 # for nozzle tightening

####################################################################
#######             Mode 3 addtion                              ####
####################################################################

########################################
# TMC2209 configuration
########################################

# [tmc2209 stepper_x]
# uart_pin: PC13
# microsteps: 16
# run_current: 0.700
# hold_current: 0.500

# [tmc2209 stepper_y]
# uart_pin: PE3
# microsteps: 16
# run_current: 0.700
# hold_current: 0.500

# [tmc2209 stepper_z]
# uart_pin: PE1
# microsteps: 16
# run_current: 1.060
# hold_current: 0.663

# [tmc2209 stepper_z1]
# uart_pin: PD1 # this is E1
# microsteps: 16
# run_current: 1.060
# hold_current: 0.663

# [tmc2209 stepper_z2]
# uart_pin: PD6 # this is E2
# microsteps: 16
# run_current: 1.060
# hold_current: 0.663

# [tmc2209 extruder]
# uart_pin: PD4
# microsteps: 16
# #run_current: 0.371
# run_current: 0.700
# hold_current: 0.250

#mode 3 addtion end 

[firmware_retraction]
retract_speed: 60
unretract_extra_length: 0
retract_length: 0.5

[tmc2209 extruder]
cs_pin: PC17
spi_bus: usart1
run_current: 0.6
sense_resistor: 0.051
interpolate: true


[heater_bed]
heater_pin: !PA19
sensor_type: NTC 100K beta 3950
sensor_pin: PC13
control: pid
pid_Kp: 71.011
pid_Ki: 2.904
pid_Kd: 434.054
min_temp: 0
max_temp: 130
pwm_cycle_time: 0.02
#mode 2
#pid_Kp: 71.277
#pid_Ki: 1.930
#pid_Kd: 657.065

#mode 3
#heater_pin: PD12
#sensor_pin: PF4 # T1
#sensor_type: ATC Semitec 104GT-2
#pid_kp = 67.301
#pid_ki = 3.770
#pid_kd = 300.330
#max_power: 1.0

[fan]                     # Print cooling fan
pin: PC23                 # FAN0
kick_start_time: 0.500    # helps get the fan spinning

# [controller_fan my_controller_fan]                     # MB fan
# pin: PC23                 # FAN0
# stepper: stepper_x
# kick_start_time: 0.500    # helps get the fan spinning

[heater_fan nozzle_cooling_fan]
pin: PC26   #FAN1
max_power: 1.0
kick_start_time: 0.500
heater: extruder
heater_temp: 40
fan_speed: 1.0

[fan_generic Chamber_light] # Control the chamber lights: 2 x COB led's strips from the sides connected to FAN2 port.
pin: PA0  #FAN2
max_power: 1.0

# [fan]                     # Print cooling Fan 
# pin: PA0  #FAN2
# kick_start_time: 0.500    # helps get the fan spinning

# [output_pin psupower]
# pin: PD15

# [gcode_macro M80]
# gcode: 
#   SET_PIN PIN=psupower VALUE=1

# [gcode_macro M81]
# gcode:
#   SET_PIN PIN=psupower VALUE=0

#mode 3 
# [heater_fan fan0]
# pin: PC8
# max_power: 1.0
# shutdown_speed: 1
# heater: extruder
# heater_temp: 50.0
# fan_speed: 1.0

# [fan]
# pin: PE5
# #max_power: 1.0
# #shutdown_speed: 0
# #cycle_time: 0.010
# #hardware_pwm: false
# #kick_start_time: 0.100
# #off_below: 0.0

# [controller_fan mcu_fan]
# pin: PE6
# max_power: 0.33 # 0.66 is OK if needed but 1.0 is pretty loud
# shutdown_speed: 0
# kick_start_time: 0.2
# heater: extruder


[mcu] ###### DONT forget to edit the line below with the correct Device ID ######
serial: /dev/serial/by-id/usb-Klipper_sam4e8e_XXXXXXXXXXXXXXXXXXXXX-if00 #edit this line otherwise you will not be able to connect to your duet board.

[printer]
kinematics: corexy        #type of machine
max_velocity: 1500        
max_accel: 9000          
max_z_velocity: 20
max_z_accel: 150
max_accel_to_decel: 9000
square_corner_velocity: 5

#mode 3
# [printer]
# kinematics: corexy
# max_velocity: 300
# max_accel: 3000
# max_accel_to_decel: 3000 # S-Curve only - Normally 1/2 of max_accel
# max_z_velocity: 25
# #max_z_velocity: 10
# max_z_accel: 15

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    155,155,20

#mode 3 addition
# [smooth_axis]
# smoother_freq_x: 22.34
# smoother_freq_y: 29.91

# [scurve]
# acceleration_order: 4
# min_jerk_limit_time: 0.038277
# #max_jerk: 47025

# [idle_timeout]
# gcode:
#     TURN_OFF_HEATERS
#     M84
# timeout: 600

# [respond]
# default_type = command

#mode 2 & 1
# [input_shaper]
# shaper_type_x = zv
# shaper_freq_x = 65.8 #73.2
# shaper_type_y = mzv
# shaper_freq_y = 41.2 #46.8

[probe]                           # original Prusa Super PINDA Inductive Probe
pin: ^PC1
x_offset:25.713                  
#x_offset:-27.00                  # The probe is from the left of the hotend - front look - BLV NF-Sunrise Hotend setup
y_offset: 31.079  
#29.65          # The probe is behind the hotend - front look - BLV NF-Sunrise Hotend setup
#y_offset: 31.079  #29.65          # The probe is behind the hotend - front look - BLV NF-Sunrise Hotend setup
z_offset = 0
#1.200			  # after calibration set your value
#z_offset = 0	#1.200			  # after calibration set your value

speed: 10                         # Probing speed
samples: 3                        # How many times to probe the same point
sample_retract_dist: 2.0          # How far to retract (in mm) from the probe point
samples_result: median
samples_tolerance: .02
samples_tolerance_retries: 5

#mode 3
# [bltouch]
# sensor_pin: PG8
# control_pin: PA1
# pin_move_time: 0.88
# stow_on_each_sample: true
# #probe_with_touch_mode: true
# pin_up_reports_not_triggered: true
# pin_up_touch_mode_reports_triggered: true
# x_offset: 0
# y_offset: 61.5
# z_offset: 3.904
# samples: 3
# sample_retract_dist: 2
# speed: 3
# samples_result: average

[safe_z_home]
home_xy_position: 129.287,123.921 #179.00,115.00    # (155,155) Change coordinates to the center of your print bed
speed: 200                                          # speed of safe homing
z_hop: 10                                           # Move up 10mm
z_hop_speed: 5                                      # Speed of jump while homing jump

#mode 3
# [safe_z_home]
# home_xy_position: 160,160
# speed: 50
# z_hop: 10	# Move up a bit
# z_hop_speed: 5

[force_move]
enable_force_move: false


[bed_mesh]                   # mesh of 310x310 minus 5mm each size: 300x300
speed: 300                   # The speed (in mm/s) of non-probing moves during the calibration
horizontal_move_z: 3         # The height (in mm) that the head should be commanded to move to just prior to starting a probe operation
mesh_min: 30,30 #20,30              # Defines the minimum x,y coordinate of the mesh (relative to the probe's location)
mesh_max: 280,280 #290,280           # Defines the maximum x,y coordinate of the mesh (relative to the probe's location)
probe_count: 4,4             # defining the number of points to probe along each axis
fade_start: 1.0
fade_end: 10.0
split_delta_z: .01           # The amount of Z difference (in mm) along a move that will trigger a split
move_check_distance: 3
mesh_pps: 2,2
algorithm: bicubic
relative_reference_index: 12 # point index in the mesh to reference all z values to.

#mode 3
# [bed_mesh]
# speed: 50
# horizontal_move_z: 5
# mesh_min: 10,80
# #   Defines the minimum x,y coodinate of the mesh for rectangular beds.  This
# #   coordinate is relative to the probe's location. This will be the first
# #   point probed, nearest to the origin. This parameter must be provided for
# #   rectangular beds.
# mesh_max: 310,300
# #   Defines the maximum x,y coordinate of the mesh for rectangular beds.
# #   Adheres to the same principle as mesh_min, however this will be the
# #   furthest point probed from the bed's origin. This parameter must be
# #   provided for rectangular beds.
# probe_count: 5,5
# #   For rectangular beds, this is a comma separate pair of integer
# #   values (X,Y) defining the number of points to probe along each axis.
# #   A single value is also valid, in which case that value will be applied
# #   to both axes.  Default is 3,3.


[z_tilt]      # Multiple Z stepper tilt adjustment
z_positions: 369.743,155
             -59.743,155
points: 248.921,123.921
        -1.079,123.921
speed: 200
horizontal_move_z: 5
retries: 6
retry_tolerance: 0.015

[idle_timeout]
timeout: 1800

#mode 2
#[z_tilt]      # Multiple Z stepper tilt adjustment
# z_positions: -75.250,155
#              354.250,155
# points: 30.000,125.000
#        318.000,125.000


#mode 3
# [z_tilt]
# z_positions:
#     -22,163
#     343,279
#     343,37
# points:
#     10,102
#     310,243
#     310,-12
# speed: 100
# #horizontal_move_z: 5
# retries: 5
# retry_tolerance: 0.02



#[temperature_sensor Raspberry_cpu] # Pi temperature monitoring
#sensor_type: rpi_temperature
#gcode_id: P

#Fluid addons

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

#fluidd macros
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#End fluidd macros


# #fluidd macros
# [gcode_macro PAUSE]
# description: Pause the actual running print
# rename_existing: PAUSE_BASE
# # change this if you need more or less extrusion
# variable_extrude: 1.0
# gcode:
#   ##### read E from pause macro #####
#   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#   ##### set park positon for x and y #####
#   # default is your max posion from your printer.cfg
#   {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#   {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#   ##### calculate save lift position #####
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set act_z = printer.toolhead.position.z|float %}
#   {% if act_z < (max_z - 2.0) %}
#       {% set z_safe = 2.0 %}
#   {% else %}
#       {% set z_safe = max_z - act_z %}
#   {% endif %}
#   ##### end of definitions #####
#   PAUSE_BASE
#   G91
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     G1 E-{E} F2100
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}
#   {% if "xyz" in printer.toolhead.homed_axes %}
#     G1 Z{z_safe} F900
#     G90
#     G1 X{x_park} Y{y_park} F6000
#   {% else %}
#     {action_respond_info("Printer not homed")}
#   {% endif %}


# [gcode_macro RESUME]
# description: Resume the actual running print
# rename_existing: RESUME_BASE
# gcode:
#   ##### read E from pause macro #####
#   {% set E = printer["gcode_macro PAUSE"].extrude|float %}
#   #### get VELOCITY parameter if specified ####
#   {% if 'VELOCITY' in params|upper %}
#     {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#   {%else %}
#     {% set get_params = "" %}
#   {% endif %}
#   ##### end of definitions #####
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     G91
#     G1 E{E} F2100
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}  
#   RESUME_BASE {get_params}


# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# gcode:
#   TURN_OFF_HEATERS
#   CANCEL_PRINT_BASE

# #End fluidd macros

#macros

[delayed_gcode _Startup]
# execute when the delay duration has elapsed.
initial_duration: 1.0    #   If set to 0 the delayed_gcode will not execute on startup Default is 0.
gcode:
  M117 Welcome!
  M117 BLV Cube V1.2 is Ready :)
  SET_FAN_SPEED FAN=Chamber_light SPEED=0.15


[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91 ;relative positioning
  M117 Heating...
  M109 S{params.TEMP|default(215, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  M117 Unloading filament...
  G0 E-5 F3600        ;extract filament to cold end area 
  G4 P3000            ;wait for three seconds
  G0 E5 F3600         ;push back the filament to smash any stringing 
  G0 E-15 F3600       ;Extract back fast in the cold zone 
  G0 E-130 F300       ;Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91 ;relative positioning
  M117 Heating...
  M109 S{params.TEMP|default(215, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  M117 Loading filament...
  G0 E100 F600 ; Load the filament into the hotend area.
  G4 P1000
  G0 E40 F100 ; Purge
  M400
  TURN_OFF_HEATERS
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro PRIME_LINE]
gcode:
  M109 S210; wait for extruder to heat up
  G1 Z5 F3000 ; lift
  G1 X5 Y10 F12000 ; move to prime
  G1 Z0.3 F3000 ; get ready to prime
  G92 E0 ; reset extrusion distance
  G1 Y80 E16 F1200 ; prime nozzle
  G1 Y100 F15000 ; quick wipe

[gcode_macro z_tilt]
gcode:
  Z_TILT_ADJUST


[gcode_macro START_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=start_print_state
  G21 ;metric values
  G90 ;absolute positioning
  M82 ;set extruder to absolute mode
  G28 ;home
  M117 Heating...
  M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }; wait for bed to heat up
  M109 S150 ; Wait for extruder to reach 150 so an inductive probe (if present) is at a predictable temp. Also allows the bed heat to spread a little.
  Z_TILT_ADJUST ;Adjust bed tilt
  G28 Z ;Home again as Z will have changed after tilt adjustment and bed heating.
  BED_MESH_CALIBRATE ; Calibrate bed mesh
  G0 X10 Y310 Z10 F6000 ; Park in the back and wait for extruder
  M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }; wait for extruder to heat up
  M117 Printing...
  RESTORE_GCODE_STATE NAME=start_print_state

# The end_print macro is also called from CANCEL_PRINT.
[gcode_macro END_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=end_print_state
  M104 S0 ;extruder heater off
  M140 S0 ;heated bed heater off
  G91 ;relative positioning
  G1 Z10 E-2 F3600  ;retract the filament a bit before lifting the nozzle.
  G1 E-2 F3600 ;retract filament even more
  G90 ;absolute positioning
  G0 X10 Y310 ; Park in the back
  M84 ;steppers off
  M107 ; part cooling fan off
  M117 Done.
  RESTORE_GCODE_STATE NAME=end_print_state


  #mode 2
#   #macros

# [delayed_gcode _Startup]
# # execute when the delay duration has elapsed.
# initial_duration: 1.0    #   If set to 0 the delayed_gcode will not execute on startup Default is 0.
# gcode:
#   M117 Welcome!
#   M117 BLV Cube V1.2 is Ready :)
#   M80
#   #SET_FAN_SPEED FAN=Chamber_light SPEED=0.15


# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#   SAVE_GCODE_STATE NAME=unload_state
#   G91 ;relative positioning
#   M117 Heating...
#   M109 S{params.TEMP|default(215, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
#   M117 Unloading filament...
#   G0 E-5 F3600        ;extract filament to cold end area 
#   G4 P3000            ;wait for three seconds
#   G0 E5 F3600         ;push back the filament to smash any stringing 
#   G0 E-15 F3600       ;Extract back fast in the cold zone 
#   G0 E-130 F300       ;Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
#   M117 Filament unloaded!
#   RESTORE_GCODE_STATE NAME=unload_state

# [gcode_macro LOAD_FILAMENT]
# gcode:
#   SAVE_GCODE_STATE NAME=load_state
#   G91 ;relative positioning
#   M117 Heating...
#   M109 S{params.TEMP|default(215, true)} ; Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
#   M117 Loading filament...
#   G0 E100 F600 ; Load the filament into the hotend area.
#   G4 P1000
#   G0 E40 F100 ; Purge
#   M400
#   TURN_OFF_HEATERS
#   M117 Filament loaded!
#   RESTORE_GCODE_STATE NAME=load_state

# [gcode_macro PRIME_LINE]
# gcode:
#   M109 S210; wait for extruder to heat up
#   G1 Z5 F3000 ; lift
#   G1 X5 Y10 F12000 ; move to prime
#   G1 Z0.3 F3000 ; get ready to prime
#   G92 E0 ; reset extrusion distance
#   G1 Y80 E16 F1200 ; prime nozzle
#   G1 Y100 F15000 ; quick wipe

# [gcode_macro z_tilt]
# gcode:
#   Z_TILT_ADJUST


# [gcode_macro START_PRINT]
# gcode:
#   SAVE_GCODE_STATE NAME=start_print_state
#   G21 ;metric values
#   G90 ;absolute positioning
#   M82 ;set extruder to absolute mode
#   G28 ;home
#   M117 Heating...
#   M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) }; wait for bed to heat up
#   M109 S150 ; Wait for extruder to reach 150 so an inductive probe (if present) is at a predictable temp. Also allows the bed heat to spread a little.
#   Z_TILT_ADJUST ;Adjust bed tilt
#   G28 Z ;Home again as Z will have changed after tilt adjustment and bed heating.
#   BED_MESH_CALIBRATE ; Calibrate bed mesh
#   G0 X10 Y310 Z10 F6000 ; Park in the back and wait for extruder
#   M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }; wait for extruder to heat up
#   M117 Printing...
#   RESTORE_GCODE_STATE NAME=start_print_state

# # The end_print macro is also called from CANCEL_PRINT.
# [gcode_macro END_PRINT]
# gcode:
#   SAVE_GCODE_STATE NAME=end_print_state
#   M104 S0 ;extruder heater off
#   M140 S0 ;heated bed heater off
#   G91 ;relative positioning
#   G1 Z10 E-2 F3600  ;retract the filament a bit before lifting the nozzle.
#   G1 E-2 F3600 ;retract filament even more
#   G90 ;absolute positioning
#   G0 X10 Y310 ; Park in the back
#   M84 ;steppers off
#   M107 ; part cooling fan off
#   M117 Done.
#   RESTORE_GCODE_STATE NAME=end_print_state


#mode 2 addtion 

# # Mainsail settings
# [include mainsail.cfg]

# # Display settings
# # [include fysetcmini12864.cfg]
# # [include display_layout.cfg]
# # [include display_menu.cfg]

# # WS2812 LED
# [include ws2812.cfg]

# # Power On Button wired to E1_STOP
# [gcode_button power_on]
# pin: !PC16 #E1_STOP
# press_gcode: M80

#mode 3 addition 
# ########################################
# # EXP1 / EXP2 (display) pins
# ########################################

# [board_pins]
# aliases:
#     # EXP1 header
#     EXP1_1=PG4, EXP1_3=PD11, EXP1_5=PG2, EXP1_7=PG6, EXP1_9=<GND>,
#     EXP1_2=PA8, EXP1_4=PD10, EXP1_6=PG3, EXP1_8=PG7, EXP1_10=<5V>,
#     # EXP2 header
#     EXP2_1=PB14, EXP2_3=PG10, EXP2_5=PF11, EXP2_7=PF12,  EXP2_9=<GND>,
#     EXP2_2=PB13, EXP2_4=PB12, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=PF13
#     # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

# # See the sample-lcd.cfg file for definitions of common LCD displays.
